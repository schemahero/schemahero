name: "Tagged release"
on:
  push:
    tags: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.3"

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - run: make generate fmt
      - run: go mod tidy
      - run: git diff
      - run: make vet manifests bin/kubectl-schemahero manager test
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: manager
          path: bin/manager
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: kubectl-schemahero
          path: bin/kubectl-schemahero

  test-postgres:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        postgres_version: ["10.16", "11.11", "12.6", "13.2"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/postgres ${{matrix.postgres_version}}

  test-mysql:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mysql_version: ["5.6.51", "5.7.33", "8.0.23"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/mysql ${{matrix.mysql_version}}

  test-cockroach:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        cockroachdb_version: ["v19.2.12", "v20.1.13", "v20.2.6"]
    steps:
      - uses: actions/checkout@v2
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v2.0.8
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/cockroach ${{matrix.cockroachdb_version}}

  goreleaser:
    runs-on: ubuntu-latest
    needs:
      - test-postgres
      - test-mysql
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.3"
      - uses: azure/docker-login@v1
        with:
          username: schemaherodeploy
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: set previous release tag for goreleaser
        shell: bash
        run: |
          echo "GORELEASER_PREVIOUS_TAG=$(curl --silent 'https://api.github.com/repos/schemahero/schemahero/releases/latest' | grep -Po '\"tag_name\": \"\K.*?(?=\")' )" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2.5.0
        with:
          version: latest
          args: release --rm-dist --config deploy/.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  krew:
    runs-on: ubuntu-latest
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create new schemahero version in krew-index
        uses: rajatjindal/krew-release-bot@v0.0.39
        with:
          krew_template_file: deploy/krew.yaml
