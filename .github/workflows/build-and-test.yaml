name: "Build and test"
on:
  pull_request:
    branches: [ main ]
  push:
    tags-ignore: ["*"] # tags run tagged-release workflow
    branches: [ main ] # run tests on main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.4"

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - uses: actions/checkout@v4.1.1

      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - run: make manifests bin/kubectl-schemahero manager
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: kubectl-schemahero
          path: bin/kubectl-schemahero
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: manager
          path: bin/manager

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.4"

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - uses: actions/checkout@v4.1.1

      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
      - uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - run: make fmt
      - run: go mod tidy
      - run: make vet test

  test-postgres:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        postgres_version: ["11.18", "12.13", "13.9", "14.6", "15.1"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/postgres ${{matrix.postgres_version}}

  test-mysql:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        mysql_version: ["8.0.31", "8.4.5", "9.3.0"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/mysql ${{matrix.mysql_version}}

  test-cockroach:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # "v19.2.12", "v20.2.19" are no longer supported
        cockroachdb_version: ["v21.2.17", "v22.1.11"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/cockroach ${{matrix.cockroachdb_version}}

  test-cassandra:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        cassandra_version: ["3.11.10"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/cassandra ${{matrix.cassandra_version}}

  test-sqlite:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        sqlite_version: ["3.39.3"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/sqlite ${{matrix.sqlite_version}}

  test-rqlite:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        rqlite_version: ["6.10.2", "7.6.1"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/rqlite ${{matrix.rqlite_version}}

  test-timescaledb:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        timescaledb_version: ["2.9.3-pg14"]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/timescaledb ${{matrix.timescaledb_version}}

  test-fixtures:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Download kubectl-schemahero binary
        uses: actions/download-artifact@v4.3.0
        with:
          name: kubectl-schemahero
          path: bin/
      - run: chmod +x bin/kubectl-schemahero
      - run: make -C integration/tests/fixtures run

  all-tests-passed:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - test-postgres
      - test-mysql
      - test-cockroach
      - test-cassandra
      - test-sqlite
      - test-rqlite
      - test-timescaledb
      - test-fixtures
    steps:
      - name: All tests passed
        run: echo "All tests have passed successfully"
