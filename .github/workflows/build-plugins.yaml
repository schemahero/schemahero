name: Build and Push Plugins

on:
  push:
    branches:
      - plugins-ci  # Trigger on pushes to the plugins-ci branch for testing
      - plugins     # And the main plugins branch
  pull_request:
    branches:
      - plugins

env:
  REGISTRY: docker.io
  REGISTRY_NAMESPACE: schemahero

jobs:
  # Determine which plugins changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      postgres: ${{ steps.filter.outputs.postgres }}
      mysql: ${{ steps.filter.outputs.mysql }}
      timescaledb: ${{ steps.filter.outputs.timescaledb }}
      sqlite: ${{ steps.filter.outputs.sqlite }}
      rqlite: ${{ steps.filter.outputs.rqlite }}
      cassandra: ${{ steps.filter.outputs.cassandra }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            postgres:
              - 'plugins/postgres/**'
              - '.github/workflows/build-plugins.yaml'
            mysql:
              - 'plugins/mysql/**'
              - '.github/workflows/build-plugins.yaml'
            timescaledb:
              - 'plugins/timescaledb/**'
              - '.github/workflows/build-plugins.yaml'
            sqlite:
              - 'plugins/sqlite/**'
              - '.github/workflows/build-plugins.yaml'
            rqlite:
              - 'plugins/rqlite/**'
              - '.github/workflows/build-plugins.yaml'
            cassandra:
              - 'plugins/cassandra/**'
              - '.github/workflows/build-plugins.yaml'

  # PostgreSQL Plugin
  build-postgres:
    needs: changes
    if: needs.changes.outputs.postgres == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/postgres/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/postgres/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: postgres
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}

  # MySQL Plugin
  build-mysql:
    needs: changes
    if: needs.changes.outputs.mysql == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/mysql/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/mysql/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: mysql
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}

  # TimescaleDB Plugin
  build-timescaledb:
    needs: changes
    if: needs.changes.outputs.timescaledb == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/timescaledb/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/timescaledb/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: timescaledb
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}

  # SQLite Plugin
  build-sqlite:
    needs: changes
    if: needs.changes.outputs.sqlite == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/sqlite/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/sqlite/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: sqlite
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}

  # RQLite Plugin
  build-rqlite:
    needs: changes
    if: needs.changes.outputs.rqlite == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/rqlite/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/rqlite/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: rqlite
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}

  # Cassandra Plugin
  build-cassandra:
    needs: changes
    if: needs.changes.outputs.cassandra == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get plugin version
        id: version
        run: echo "VERSION=$(cat plugins/cassandra/VERSION)" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: plugins/cassandra/go.sum

      - name: Build and push
        uses: ./.github/actions/build-plugin
        with:
          plugin_name: cassandra
          plugin_version: ${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          registry: ${{ env.REGISTRY }}
          registry_namespace: ${{ env.REGISTRY_NAMESPACE }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/plugins' || github.ref == 'refs/heads/plugins-ci') }}