//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The SchemaHero Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha4

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraClusteringOrder) DeepCopyInto(out *CassandraClusteringOrder) {
	*out = *in
	if in.IsDescending != nil {
		in, out := &in.IsDescending, &out.IsDescending
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraClusteringOrder.
func (in *CassandraClusteringOrder) DeepCopy() *CassandraClusteringOrder {
	if in == nil {
		return nil
	}
	out := new(CassandraClusteringOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraColumn) DeepCopyInto(out *CassandraColumn) {
	*out = *in
	if in.IsStatic != nil {
		in, out := &in.IsStatic, &out.IsStatic
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraColumn.
func (in *CassandraColumn) DeepCopy() *CassandraColumn {
	if in == nil {
		return nil
	}
	out := new(CassandraColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraDataTypeSchema) DeepCopyInto(out *CassandraDataTypeSchema) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]*CassandraField, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CassandraField)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraDataTypeSchema.
func (in *CassandraDataTypeSchema) DeepCopy() *CassandraDataTypeSchema {
	if in == nil {
		return nil
	}
	out := new(CassandraDataTypeSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraField) DeepCopyInto(out *CassandraField) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraField.
func (in *CassandraField) DeepCopy() *CassandraField {
	if in == nil {
		return nil
	}
	out := new(CassandraField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableProperties) DeepCopyInto(out *CassandraTableProperties) {
	*out = *in
	if in.Caching != nil {
		in, out := &in.Caching, &out.Caching
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Compaction != nil {
		in, out := &in.Compaction, &out.Compaction
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(int)
		**out = **in
	}
	if in.GCGraceSeconds != nil {
		in, out := &in.GCGraceSeconds, &out.GCGraceSeconds
		*out = new(int)
		**out = **in
	}
	if in.MaxIndexInterval != nil {
		in, out := &in.MaxIndexInterval, &out.MaxIndexInterval
		*out = new(int)
		**out = **in
	}
	if in.MemtableFlushPeriodMS != nil {
		in, out := &in.MemtableFlushPeriodMS, &out.MemtableFlushPeriodMS
		*out = new(int)
		**out = **in
	}
	if in.MinIndexInterval != nil {
		in, out := &in.MinIndexInterval, &out.MinIndexInterval
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableProperties.
func (in *CassandraTableProperties) DeepCopy() *CassandraTableProperties {
	if in == nil {
		return nil
	}
	out := new(CassandraTableProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSchema) DeepCopyInto(out *CassandraTableSchema) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([][]string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
		}
	}
	if in.ClusteringOrder != nil {
		in, out := &in.ClusteringOrder, &out.ClusteringOrder
		*out = new(CassandraClusteringOrder)
		(*in).DeepCopyInto(*out)
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*CassandraColumn, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CassandraColumn)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(CassandraTableProperties)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSchema.
func (in *CassandraTableSchema) DeepCopy() *CassandraTableSchema {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Column) DeepCopyInto(out *Column) {
	*out = *in
	in.Value.DeepCopyInto(&out.Value)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Column.
func (in *Column) DeepCopy() *Column {
	if in == nil {
		return nil
	}
	out := new(Column)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataType) DeepCopyInto(out *DataType) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataType.
func (in *DataType) DeepCopy() *DataType {
	if in == nil {
		return nil
	}
	out := new(DataType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataType) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTypeList) DeepCopyInto(out *DataTypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTypeList.
func (in *DataTypeList) DeepCopy() *DataTypeList {
	if in == nil {
		return nil
	}
	out := new(DataTypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataTypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTypeSchema) DeepCopyInto(out *DataTypeSchema) {
	*out = *in
	if in.Cassandra != nil {
		in, out := &in.Cassandra, &out.Cassandra
		*out = new(CassandraDataTypeSchema)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTypeSchema.
func (in *DataTypeSchema) DeepCopy() *DataTypeSchema {
	if in == nil {
		return nil
	}
	out := new(DataTypeSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTypeSpec) DeepCopyInto(out *DataTypeSpec) {
	*out = *in
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(DataTypeSchema)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTypeSpec.
func (in *DataTypeSpec) DeepCopy() *DataTypeSpec {
	if in == nil {
		return nil
	}
	out := new(DataTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataTypeStatus) DeepCopyInto(out *DataTypeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataTypeStatus.
func (in *DataTypeStatus) DeepCopy() *DataTypeStatus {
	if in == nil {
		return nil
	}
	out := new(DataTypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Migration) DeepCopyInto(out *Migration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Migration.
func (in *Migration) DeepCopy() *Migration {
	if in == nil {
		return nil
	}
	out := new(Migration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Migration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationList) DeepCopyInto(out *MigrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Migration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationList.
func (in *MigrationList) DeepCopy() *MigrationList {
	if in == nil {
		return nil
	}
	out := new(MigrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationSpec) DeepCopyInto(out *MigrationSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationSpec.
func (in *MigrationSpec) DeepCopy() *MigrationSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationStatus) DeepCopyInto(out *MigrationStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationStatus.
func (in *MigrationStatus) DeepCopy() *MigrationStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableColumn) DeepCopyInto(out *MysqlTableColumn) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(MysqlTableColumnConstraints)
		(*in).DeepCopyInto(*out)
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(MysqlTableColumnAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableColumn.
func (in *MysqlTableColumn) DeepCopy() *MysqlTableColumn {
	if in == nil {
		return nil
	}
	out := new(MysqlTableColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableColumnAttributes) DeepCopyInto(out *MysqlTableColumnAttributes) {
	*out = *in
	if in.AutoIncrement != nil {
		in, out := &in.AutoIncrement, &out.AutoIncrement
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableColumnAttributes.
func (in *MysqlTableColumnAttributes) DeepCopy() *MysqlTableColumnAttributes {
	if in == nil {
		return nil
	}
	out := new(MysqlTableColumnAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableColumnConstraints) DeepCopyInto(out *MysqlTableColumnConstraints) {
	*out = *in
	if in.NotNull != nil {
		in, out := &in.NotNull, &out.NotNull
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableColumnConstraints.
func (in *MysqlTableColumnConstraints) DeepCopy() *MysqlTableColumnConstraints {
	if in == nil {
		return nil
	}
	out := new(MysqlTableColumnConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableForeignKey) DeepCopyInto(out *MysqlTableForeignKey) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.References.DeepCopyInto(&out.References)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableForeignKey.
func (in *MysqlTableForeignKey) DeepCopy() *MysqlTableForeignKey {
	if in == nil {
		return nil
	}
	out := new(MysqlTableForeignKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableForeignKeyReferences) DeepCopyInto(out *MysqlTableForeignKeyReferences) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableForeignKeyReferences.
func (in *MysqlTableForeignKeyReferences) DeepCopy() *MysqlTableForeignKeyReferences {
	if in == nil {
		return nil
	}
	out := new(MysqlTableForeignKeyReferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableIndex) DeepCopyInto(out *MysqlTableIndex) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableIndex.
func (in *MysqlTableIndex) DeepCopy() *MysqlTableIndex {
	if in == nil {
		return nil
	}
	out := new(MysqlTableIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MysqlTableSchema) DeepCopyInto(out *MysqlTableSchema) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]*MysqlTableForeignKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MysqlTableForeignKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*MysqlTableIndex, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MysqlTableIndex)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*MysqlTableColumn, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MysqlTableColumn)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MysqlTableSchema.
func (in *MysqlTableSchema) DeepCopy() *MysqlTableSchema {
	if in == nil {
		return nil
	}
	out := new(MysqlTableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableColumn) DeepCopyInto(out *PostgresqlTableColumn) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(PostgresqlTableColumnConstraints)
		(*in).DeepCopyInto(*out)
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(PostgresqlTableColumnAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableColumn.
func (in *PostgresqlTableColumn) DeepCopy() *PostgresqlTableColumn {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableColumnAttributes) DeepCopyInto(out *PostgresqlTableColumnAttributes) {
	*out = *in
	if in.AutoIncrement != nil {
		in, out := &in.AutoIncrement, &out.AutoIncrement
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableColumnAttributes.
func (in *PostgresqlTableColumnAttributes) DeepCopy() *PostgresqlTableColumnAttributes {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableColumnAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableColumnConstraints) DeepCopyInto(out *PostgresqlTableColumnConstraints) {
	*out = *in
	if in.NotNull != nil {
		in, out := &in.NotNull, &out.NotNull
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableColumnConstraints.
func (in *PostgresqlTableColumnConstraints) DeepCopy() *PostgresqlTableColumnConstraints {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableColumnConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableForeignKey) DeepCopyInto(out *PostgresqlTableForeignKey) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.References.DeepCopyInto(&out.References)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableForeignKey.
func (in *PostgresqlTableForeignKey) DeepCopy() *PostgresqlTableForeignKey {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableForeignKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableForeignKeyReferences) DeepCopyInto(out *PostgresqlTableForeignKeyReferences) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableForeignKeyReferences.
func (in *PostgresqlTableForeignKeyReferences) DeepCopy() *PostgresqlTableForeignKeyReferences {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableForeignKeyReferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableIndex) DeepCopyInto(out *PostgresqlTableIndex) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableIndex.
func (in *PostgresqlTableIndex) DeepCopy() *PostgresqlTableIndex {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableSchema) DeepCopyInto(out *PostgresqlTableSchema) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]*PostgresqlTableForeignKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgresqlTableForeignKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*PostgresqlTableIndex, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgresqlTableIndex)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*PostgresqlTableColumn, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgresqlTableColumn)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]*PostgresqlTableTrigger, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PostgresqlTableTrigger)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableSchema.
func (in *PostgresqlTableSchema) DeepCopy() *PostgresqlTableSchema {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresqlTableTrigger) DeepCopyInto(out *PostgresqlTableTrigger) {
	*out = *in
	if in.ConstraintTrigger != nil {
		in, out := &in.ConstraintTrigger, &out.ConstraintTrigger
		*out = new(bool)
		**out = **in
	}
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForEachStatement != nil {
		in, out := &in.ForEachStatement, &out.ForEachStatement
		*out = new(bool)
		**out = **in
	}
	if in.ForEachRow != nil {
		in, out := &in.ForEachRow, &out.ForEachRow
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresqlTableTrigger.
func (in *PostgresqlTableTrigger) DeepCopy() *PostgresqlTableTrigger {
	if in == nil {
		return nil
	}
	out := new(PostgresqlTableTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableColumn) DeepCopyInto(out *RqliteTableColumn) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(RqliteTableColumnConstraints)
		(*in).DeepCopyInto(*out)
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(RqliteTableColumnAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableColumn.
func (in *RqliteTableColumn) DeepCopy() *RqliteTableColumn {
	if in == nil {
		return nil
	}
	out := new(RqliteTableColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableColumnAttributes) DeepCopyInto(out *RqliteTableColumnAttributes) {
	*out = *in
	if in.AutoIncrement != nil {
		in, out := &in.AutoIncrement, &out.AutoIncrement
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableColumnAttributes.
func (in *RqliteTableColumnAttributes) DeepCopy() *RqliteTableColumnAttributes {
	if in == nil {
		return nil
	}
	out := new(RqliteTableColumnAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableColumnConstraints) DeepCopyInto(out *RqliteTableColumnConstraints) {
	*out = *in
	if in.NotNull != nil {
		in, out := &in.NotNull, &out.NotNull
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableColumnConstraints.
func (in *RqliteTableColumnConstraints) DeepCopy() *RqliteTableColumnConstraints {
	if in == nil {
		return nil
	}
	out := new(RqliteTableColumnConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableForeignKey) DeepCopyInto(out *RqliteTableForeignKey) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.References.DeepCopyInto(&out.References)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableForeignKey.
func (in *RqliteTableForeignKey) DeepCopy() *RqliteTableForeignKey {
	if in == nil {
		return nil
	}
	out := new(RqliteTableForeignKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableForeignKeyReferences) DeepCopyInto(out *RqliteTableForeignKeyReferences) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableForeignKeyReferences.
func (in *RqliteTableForeignKeyReferences) DeepCopy() *RqliteTableForeignKeyReferences {
	if in == nil {
		return nil
	}
	out := new(RqliteTableForeignKeyReferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableIndex) DeepCopyInto(out *RqliteTableIndex) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableIndex.
func (in *RqliteTableIndex) DeepCopy() *RqliteTableIndex {
	if in == nil {
		return nil
	}
	out := new(RqliteTableIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RqliteTableSchema) DeepCopyInto(out *RqliteTableSchema) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]*RqliteTableForeignKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RqliteTableForeignKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*RqliteTableIndex, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RqliteTableIndex)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*RqliteTableColumn, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RqliteTableColumn)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RqliteTableSchema.
func (in *RqliteTableSchema) DeepCopy() *RqliteTableSchema {
	if in == nil {
		return nil
	}
	out := new(RqliteTableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeedData) DeepCopyInto(out *SeedData) {
	*out = *in
	if in.Rows != nil {
		in, out := &in.Rows, &out.Rows
		*out = make([]SeedDataRow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeedData.
func (in *SeedData) DeepCopy() *SeedData {
	if in == nil {
		return nil
	}
	out := new(SeedData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeedDataRow) DeepCopyInto(out *SeedDataRow) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]Column, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeedDataRow.
func (in *SeedDataRow) DeepCopy() *SeedDataRow {
	if in == nil {
		return nil
	}
	out := new(SeedDataRow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeedDataValue) DeepCopyInto(out *SeedDataValue) {
	*out = *in
	if in.Int != nil {
		in, out := &in.Int, &out.Int
		*out = new(int)
		**out = **in
	}
	if in.Str != nil {
		in, out := &in.Str, &out.Str
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeedDataValue.
func (in *SeedDataValue) DeepCopy() *SeedDataValue {
	if in == nil {
		return nil
	}
	out := new(SeedDataValue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableColumn) DeepCopyInto(out *SqliteTableColumn) {
	*out = *in
	if in.Constraints != nil {
		in, out := &in.Constraints, &out.Constraints
		*out = new(SqliteTableColumnConstraints)
		(*in).DeepCopyInto(*out)
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(SqliteTableColumnAttributes)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableColumn.
func (in *SqliteTableColumn) DeepCopy() *SqliteTableColumn {
	if in == nil {
		return nil
	}
	out := new(SqliteTableColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableColumnAttributes) DeepCopyInto(out *SqliteTableColumnAttributes) {
	*out = *in
	if in.AutoIncrement != nil {
		in, out := &in.AutoIncrement, &out.AutoIncrement
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableColumnAttributes.
func (in *SqliteTableColumnAttributes) DeepCopy() *SqliteTableColumnAttributes {
	if in == nil {
		return nil
	}
	out := new(SqliteTableColumnAttributes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableColumnConstraints) DeepCopyInto(out *SqliteTableColumnConstraints) {
	*out = *in
	if in.NotNull != nil {
		in, out := &in.NotNull, &out.NotNull
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableColumnConstraints.
func (in *SqliteTableColumnConstraints) DeepCopy() *SqliteTableColumnConstraints {
	if in == nil {
		return nil
	}
	out := new(SqliteTableColumnConstraints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableForeignKey) DeepCopyInto(out *SqliteTableForeignKey) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.References.DeepCopyInto(&out.References)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableForeignKey.
func (in *SqliteTableForeignKey) DeepCopy() *SqliteTableForeignKey {
	if in == nil {
		return nil
	}
	out := new(SqliteTableForeignKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableForeignKeyReferences) DeepCopyInto(out *SqliteTableForeignKeyReferences) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableForeignKeyReferences.
func (in *SqliteTableForeignKeyReferences) DeepCopy() *SqliteTableForeignKeyReferences {
	if in == nil {
		return nil
	}
	out := new(SqliteTableForeignKeyReferences)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableIndex) DeepCopyInto(out *SqliteTableIndex) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableIndex.
func (in *SqliteTableIndex) DeepCopy() *SqliteTableIndex {
	if in == nil {
		return nil
	}
	out := new(SqliteTableIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqliteTableSchema) DeepCopyInto(out *SqliteTableSchema) {
	*out = *in
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForeignKeys != nil {
		in, out := &in.ForeignKeys, &out.ForeignKeys
		*out = make([]*SqliteTableForeignKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SqliteTableForeignKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Indexes != nil {
		in, out := &in.Indexes, &out.Indexes
		*out = make([]*SqliteTableIndex, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SqliteTableIndex)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*SqliteTableColumn, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SqliteTableColumn)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqliteTableSchema.
func (in *SqliteTableSchema) DeepCopy() *SqliteTableSchema {
	if in == nil {
		return nil
	}
	out := new(SqliteTableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSchema) DeepCopyInto(out *TableSchema) {
	*out = *in
	if in.Postgres != nil {
		in, out := &in.Postgres, &out.Postgres
		*out = new(PostgresqlTableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.Mysql != nil {
		in, out := &in.Mysql, &out.Mysql
		*out = new(MysqlTableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.CockroachDB != nil {
		in, out := &in.CockroachDB, &out.CockroachDB
		*out = new(PostgresqlTableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.Cassandra != nil {
		in, out := &in.Cassandra, &out.Cassandra
		*out = new(CassandraTableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLite != nil {
		in, out := &in.SQLite, &out.SQLite
		*out = new(SqliteTableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.RQLite != nil {
		in, out := &in.RQLite, &out.RQLite
		*out = new(RqliteTableSchema)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSchema.
func (in *TableSchema) DeepCopy() *TableSchema {
	if in == nil {
		return nil
	}
	out := new(TableSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	if in.Requires != nil {
		in, out := &in.Requires, &out.Requires
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(TableSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.SeedData != nil {
		in, out := &in.SeedData, &out.SeedData
		*out = new(SeedData)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}
